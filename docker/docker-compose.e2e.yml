services:
  e2e_tests:
    build:
      context: ../e2e-tests
    ports:
      - '9323:9323'
    environment:
      - NODE_ENV=test
      - BASE_CLIENT_URL=http://client:3000
      - BASE_API_URL=http://server:4000
      - POSTGRES_URL=postgresql://postgres:example@postgres:5432
      - MONGO_URL=mongodb://root:example@mongo:27017/?directConnection=true
    command: ['npm', 'run', 'test']
    depends_on:
      - server
      - client
      - postgres
      - mongo
  client:
    build:
      context: ../client
      dockerfile: Dockerfile.test
      target: prod
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:4000/api
      - API_URL=http://server:4000/api
    ports:
      - '3000:3000'
    command: ['npm', 'start']
    depends_on:
      - server
  server:
    build:
      context: ../server
      dockerfile: Dockerfile.dev
      target: prod
    ports:
      - '4000:4000'
    environment:
      - PORT=4000
      - POSTGRES_URL=postgresql://postgres:example@postgres:5432
      - MONGO_URL=mongodb://root:example@mongo:27017/?directConnection=true
      - JWT_SECRET=secret1211
      - DISCORD_CLIENT_ID=1262427700925300780
      - DISCORD_CLIENT_SECRET=OBkWRr8Rv8EyPE2CQ4tYK84o7BbfgUMv
      - DISCORD_REDIRECT_URI=http://localhost:4000/api/auth/discord/redirect
      - FRONTEND_BASE_URL=http://localhost:3000
      - CLOUDINARY_CLOUD_NAME=dzojdkynj
      - CLOUDINARY_API_KEY=645568561683437
      - CLOUDINARY_API_SECRET=9fHNpAgr7lv0jwuoKMt1kHZonkE
    command: ['npm', 'start']
    depends_on:
      - migrations
      - postgres
      - mongo
  migrations:
    build:
      context: ../server
      dockerfile: Dockerfile
      target: migration
    environment:
      - POSTGRES_URL=postgresql://postgres:example@postgres:5432
      - MONGO_URL=mongodb://root:example@mongo:27017/?directConnection=true
    depends_on:
      - postgres
      - mongo
  postgres:
    image: postgres
    restart: always
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_PASSWORD=example
  mongo:
    image: mongo
    restart: always
    ports:
      - '27017:27017'
    command: >
      bash -c "
        mongod --replSet rs0 --bind_ip_all &
        sleep 5;
        mongosh /docker-entrypoint-initdb.d/init-mongo.js;
        tail -f /dev/null"
    volumes:
      - ../server/scripts/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js
